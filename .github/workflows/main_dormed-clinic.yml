name: Build and deploy Dormed Clinic app to Oracle VM


on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu20.04


    steps:
      - uses: actions/checkout@v2

      - name: Set up Python version
        uses: actions/setup-python@v1
        with:
          python-version: '3.12'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
      
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      
      - name: Install and build frontend
        working-directory: frontend
        run: |
            npm install
            npm run build
            cd ..

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v2
        with:
          name: django-react-app
          path: |
            . 
            !venv/

  deploy:
    runs-on: ubuntu-20.04
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: django-react-app
          path: .
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrerts.ORACLE_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.ORACLE_HOST }} >> ~/.ssh/known_hosts
      
      - name: Deploy to Oracle VM
        run: |
          ssh ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} << 'EOF'

          # Paths
          PROJECT_DIR=/home/${USER}/app
          BACKEND_DIR=$PROJECT_DIR/backend
          FRONTEND_DIR=$PROJECT_DIR/frontend
          VENV_DIR=$BACKEND_DIR/venv

          # If project folder doesn't exist, create and clone repo
          if [ ! -d "$PROJECT_DIR" ]; then
            mkdir -p $PROJECT_DIR
            git clone git@github.com:<username>/<repo>.git $PROJECT_DIR
          fi

          cd $PROJECT_DIR
          git pull origin main

          # Frontend build
          cd $FRONTEND_DIR
          npm install
          npm run build

          # Backend setup
          cd $BACKEND_DIR
          if [ ! -d "$VENV_DIR" ]; then
            python3 -m venv venv
          fi
          source venv/bin/activate
          pip install -r ../requirements.txt
          python manage.py migrate
          python manage.py collectstatic --noinput
          deactivate

          # Restart Gunicorn
          sudo systemctl restart gunicorn

          EOF

          
