name: Build and deploy Dormed Clinic app from local self-hosted runner

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted   # This will run on your local machine

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build React frontend
        run: |
          cd frontend
          npm install
          npm run build
          cd ..

      - name: Prepare deployment package
        run: |
          tar --exclude=venv -czf deploy-package.tar.gz .

      - name: Upload to Oracle VM
        run: |
          echo "=== Uploading build to Oracle VM ==="
          scp -i "${{ secrets.ORACLE_SSH_KEY_FILE }}" -o StrictHostKeyChecking=no deploy-package.tar.gz ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }}:/tmp/

      - name: Deploy on Oracle VM
        run: |
          echo "=== Deploying on Oracle VM ==="
          ssh -i "${{ secrets.ORACLE_SSH_KEY_FILE }}" -o StrictHostKeyChecking=no ${{ secrets.ORACLE_USER }}@${{ secrets.ORACLE_HOST }} << 'EOF'
            set -e
            PROJECT_DIR=/home/${USER}/app
            BACKEND_DIR=$PROJECT_DIR/backend
            FRONTEND_DIR=$PROJECT_DIR/frontend
            VENV_DIR=$BACKEND_DIR/venv

            echo "=== Extracting new build ==="
            rm -rf $PROJECT_DIR
            mkdir -p $PROJECT_DIR
            tar -xzf /tmp/deploy-package.tar.gz -C $PROJECT_DIR

            echo "=== Installing backend dependencies ==="
            cd $BACKEND_DIR
            if [ ! -d "$VENV_DIR" ]; then
              python3 -m venv venv
            fi
            source venv/bin/activate
            pip install -r ../requirements.txt
            python manage.py migrate
            python manage.py collectstatic --noinput
            deactivate

            echo "=== Restarting Gunicorn ==="
            sudo systemctl restart gunicorn
          EOF
